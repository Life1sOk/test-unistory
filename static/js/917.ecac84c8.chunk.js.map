{"version":3,"file":"static/js/917.ecac84c8.chunk.js","mappings":"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","sources":["components/ellipse-progress/ellipse-progress.style.js","components/ellipse-progress/ellipse-progress.component.tsx","blocks/planet/planet.style.js","blocks/planet/planet.block.tsx","components/user-field/user-field.style.js","components/user-field/user-field.component.tsx","pages/home/home.style.js","components/block-title/block-title.style.js","components/block-title/block-title.component.tsx","components/text-box/text-box.style.js","components/text-box/text-box.component.tsx","components/input/input.style.js","components/input/input.component.tsx","blocks/sign-up/sign-up.style.js","blocks/sign-up/sign-up.block.tsx","sections/registration/registration.style.js","sections/registration/registration.section.tsx","blocks/participant/participant.style.js","blocks/participant/participant.component.tsx","blocks/scroll-list/scroll-list.style.js","blocks/scroll-list/scroll-list.block.tsx","sections/participants/participants.style.js","sections/participants/participants.section.tsx","blocks/text-call/text-call.style.js","blocks/text-call/text-call.e.tsx","sections/main/main.style.js","sections/main/main.section.tsx","sections/extention-window/extention-window.style.js","sections/extention-window/extention-window.section.tsx","pages/home/home.page.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const EllipseAnimationWrapper = styled.div`\n    width: 486px;\n    height: 486px;\n    z-index: 2;\n\n    position: absolute;\n    left: 23px;\n    top: 23px;\n`;\n\nexport const Dot = styled.div`\n    width: 6px;\n    height: 6px;\n    background-color: var(--orange);\n    border-radius: 50%;\n    z-index: 4;\n    \n    position: absolute;\n`;\n\nexport const DotBox = styled.div`\n    padding: 8px 12px;\n    width: 80px;\n    max-height: 30px;\n    background-color: var(--white);\n    border-radius: 15px;\n    color: var(--main-background);\n    z-index: 4;\n    \n    position: absolute;\n    left: 50%;\n    top: -14px;\n    transform: translateX(calc(-50% - 21.5px)); \n\n    font-weight: 700;\n    font-size: 14px;\n\n    display: flex;\n    align-items: center;\n    flex-shrink: 0;\n    gap: 8px;\n\n    &::after {\n        display: block;\n        content: '';\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        z-index: 3;\n\n        background-color: var(--white);\n        box-shadow: -2px -2px 6px rgba(50, 50, 50, 0.25), 2px 2px 6px rgba(50, 50, 50, 0.25);\n    }\n`;","import { useEffect, useState } from \"react\";\n\nimport { useAppSelector } from \"../../app-redux/hooks\";\n\nimport { EllipseAnimationWrapper, Dot, DotBox } from './ellipse-progress.style';\n\ninterface IProgress {\n    size: number,\n    strokeWidth: number,\n    percentage: number,\n    color: string,\n    pointBox?: boolean,\n    animation?: boolean,\n};\n\nconst EllipseProgress = ({ size, strokeWidth, percentage, color, pointBox, animation }: IProgress) => {\n    // State of all dots - base on that we display them;\n    const [oneDot, setOneDot] = useState(false);\n    const [twoDot, setTwoDot] = useState(false);\n    const [threeDot, setThreeDot] = useState(false);\n    // State of circle \n    const [progress, setProgress] = useState(0);\n\n    // Calculate circle's animation;\n    const viewBox = `0 0 ${size} ${size}`;\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * Math.PI * 2;\n    const dash = (progress * circumference) / 100;\n    const noAnimation = (50 * circumference) / 100;\n\n    // Window extention state - \n    const extentionIsOpen = useAppSelector((state) => state.extention.extentionReady);\n\n    useEffect(() => {\n        // Binding to extension-window so that the animation does not start if the window is open\n        if (!extentionIsOpen) {\n            setProgress(percentage);\n            // Display dots while transition is running\n            setOneDot(true);\n            setTimeout(() => setTwoDot(true), 1500);\n            setTimeout(() => setThreeDot(true), 3000);\n        }\n    }, [percentage, extentionIsOpen]);\n\n    // If we dont want animation - display all dots and change CIRCLE - strokeDashharray to the noAnimation variable;\n    useEffect(() => {\n        if (!animation) {\n            setOneDot(true);\n            setTwoDot(true);\n            setThreeDot(true);\n        }\n    }, [animation])\n\n    return (\n        <EllipseAnimationWrapper>\n            <svg width={size} height={size} viewBox={viewBox}>\n                <circle\n                    fill=\"none\"\n                    stroke={color}\n                    cx={size / 2}\n                    cy={size / 2}\n                    r={radius}\n                    strokeWidth={`${strokeWidth}px`}\n                    transform={`rotate(-90 ${size / 2} ${size / 2})`}\n                    strokeDasharray={!animation ? `${noAnimation}` : `${dash} ${circumference - dash}`}\n                    strokeLinecap=\"round\"\n                    style={{ transition: `all 3s linear` }}\n                />\n            </svg>\n            {\n                pointBox &&\n                <DotBox>\n                    <span>Q1 2022</span>\n                </DotBox>\n            }\n            {oneDot &&\n                <Dot style={{ top: '0', left: '50%', transform: 'translate(-50%, -2.5px)' }} />}\n            {twoDot &&\n                <Dot style={{ top: '50%', right: '0', transform: 'translate(2.5px, -50%)' }} />}\n            {threeDot &&\n                <Dot style={{ bottom: '0', left: '50%', transform: 'translate(-50%, 2.5px)' }} />}\n        </EllipseAnimationWrapper>\n    );\n};\n\nexport default EllipseProgress;\n","import styled from 'styled-components';\n\nimport planetImage from '../../assets/planet.png';\n\nexport const PlanetStyle = styled.div`\n    position: absolute;\n    top: ${({ top }) => top ? `${top}px` : 'none'};\n    left: ${({ left }) => left ? `${left}px` : 'none'};\n    right: ${({ right }) => right ? `${right}px` : 'none'};\n    bottom: ${({ bottom }) => bottom ? `${bottom}px` : 'none'};\n`;\n\nexport const PlanetAttractionWrapper = styled.div`\n    width: 532px;\n    height: 532px;\n    z-index: 29;\n    border-radius: 50%;\n\n    position: absolute;\n    left: 0px;\n    top: 0px;\n`;\n\nexport const PlanetImage = styled.div`\n    width: 320px;\n    height: 322px;\n\n    // Сохраняет форму картинки и создает 3д эффект\n    mask-image: url(${planetImage});\n    mask-size: contain;\n    mask-repeat: no-repeat;\n    mask-position: center;\n\n    background: url(${planetImage});\n    background-position: center;\n    background-size: cover;\n    background-repeat: no-repeat;\n    z-index: 18;\n    \n    position: absolute;\n    left: 106px;\n    top: 105px;\n`;\n\n// Все элипсы привязаны к основному Мэйн элипсуж, а сам Мейн к текущей секции //\nexport const EllipseOneMain = styled.div`\n    width: 532px;\n    height: 532px;\n    background-color: rgba(33, 33, 36, 1);\n    border-radius: 50%;\n\n    position: absolute;\n    left: 0px;\n    top: 0px;\n\n    &::before {\n        content: '';\n        width: 526px;\n        height: 526px;\n        border-radius: 50%;\n        background-color: rgba(23, 23, 25, 1);\n        filter: blur(11px);\n        z-index: 1;\n\n        position: absolute;\n        left: 3px;\n        top: 3px;\n    }\n`;\n\nexport const EllipseTwo = styled.div`\n    width: 446px;\n    height: 446px;\n    background-color: rgba(30, 30, 32, 1);\n    border-radius: 50%;\n    z-index: 3;\n    \n    position: absolute;\n    left: 43px;\n    top: 43px;\n`;\n\nexport const EllipseThree = styled.div`\n    width: 384px;\n    height: 384px;\n    border: 1px solid rgba(50, 50, 50, 1);\n    border-radius: 50%;\n    z-index: 3;\n\n    position: absolute;\n    left: 74px;\n    top: 74px;\n\n    &::after {\n        content: '';\n        width: 370px;\n        height: 370px;\n        border: 1px solid rgba(50, 50, 50, 1);\n        border-radius: 50%;\n        z-index: 3;\n        \n        position: absolute;\n        top: 7px;\n        left: 7px;\n    }\n`;","import { useRef } from 'react';\n\nimport EllipseProgress from '../../components/ellipse-progress/ellipse-progress.component';\n\nimport { PlanetStyle, PlanetImage, PlanetAttractionWrapper, EllipseOneMain, EllipseTwo, EllipseThree } from './planet.style';\n\ninterface IPlanet {\n    top?: number,\n    left?: number,\n    bottom?: number,\n    right?: number,\n    children?: JSX.Element | JSX.Element[];\n    pointBox?: boolean,\n    ellipse?: boolean,\n};\n\nconst Planet = ({ children, pointBox, top, left, right, bottom, ellipse }: IPlanet) => {\n    const planetRef = useRef<HTMLDivElement>();\n\n    const pointerEnterHandler = () => {\n        const planet = planetRef.current as any;\n        // As soon as we start the mouse, we create an animation\n        planet.style.transition = `transform 30s linear`;\n    };\n\n    const mouseMoveHandler = (event: MouseEvent) => {\n        const planet = planetRef.current as any;\n        // Planet coordinates along the X and Y axes relative to the client\n        let planetX = (planet.getBoundingClientRect()?.left) + (planet.clientWidth / 2);\n        let planetY = (planet.getBoundingClientRect()?.top) + (planet.clientHeight / 2);\n        // X and Y coordinates of the current cursor relative to the client\n        let cursoreX = event.clientX;\n        let cursoreY = event.clientY;\n        //  Finding the difference between coordinates\n        let transX = (planetX - cursoreX) * -1;\n        let transY = (planetY - cursoreY) * -1;\n        // Change the planet's position based on this data from the top\n        planet.style.transform = `translate(${transX}px,${transY}px)`;\n        // Target child's - Put text 'inside' planet;\n        const childrensText = [planet.children[0], planet.children[1]]\n        // Change the text's position based on the planet ( opposite to the planet move );\n        childrensText.forEach(child => {\n            if (child) {\n                child.style.transition = 'transform 30s linear';\n                child.style.transform = `translate(${-transX}px,${-transY}px)`;\n            }\n        })\n    };\n\n    const pointLeaveHandler = () => {\n        const planet = planetRef.current as any;\n        // When cursor leave - back default planet's setting\n        planet.style.transition = 'transform 3s linear';\n        planet.style.transform = `translate(0px, 0px)`;\n        // Target child's - Put text 'inside' planet;\n        const childrensText = [planet.children[0], planet.children[1]]\n        // Back text too\n        childrensText.forEach(child => {\n            if (child) {\n                child.style.transition = 'transform 3s linear';\n                child.style.transform = `translate(0px, 0px)`;\n            }\n        })\n    };\n\n    return (\n        <PlanetStyle top={top} left={left} right={right} bottom={bottom}>\n            <PlanetImage ref={planetRef}>\n                {children ? children : null}\n            </PlanetImage>\n            <PlanetAttractionWrapper\n                onPointerLeave={pointLeaveHandler}\n                onPointerEnter={pointerEnterHandler}\n                onMouseMove={mouseMoveHandler}\n            />\n            <EllipseOneMain>\n                <EllipseTwo />\n                <EllipseThree />\n                <EllipseProgress\n                    size={486}\n                    strokeWidth={1}\n                    percentage={50}\n                    color=\"rgba(231, 86, 38, 1)\"\n                    pointBox={pointBox}\n                    animation={ellipse}\n                />\n            </EllipseOneMain>\n        </PlanetStyle >\n    )\n};\n\nexport default Planet;","import styled from 'styled-components';\n\nexport const UserFieldStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 8px;\n`;\n\nexport const FieldLabel = styled.span`\n    height: 25px;\n    font-weight: 700;\n    font-size: 24px;\n`;\n\nexport const FieldText = styled.span`\n    color: var(--orange);\n    font-weight: 700;\n    font-size: 32px;\n`;","import { UserFieldStyle, FieldLabel, FieldText } from './user-field.style';\n\ninterface IUserField {\n    label: string,\n    text: string,\n};\n\nconst UserField = ({ label, text }: IUserField) => {\n    return (\n        <UserFieldStyle>\n            <FieldLabel>{label}</FieldLabel>\n            <FieldText>{text}</FieldText>\n        </UserFieldStyle>\n    )\n};\n\nexport default UserField;","import styled from 'styled-components';\n\nexport const HomePageStyle = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const FooterStyle = styled.div`\n    width: 100%;\n    min-height: 797px;\n    padding: 48px 64px 0 64px;\n\n    display: flex;\n    /* justify-content: space-between; */\n    gap: 136px;\n`;","import styled from 'styled-components';\n\nexport const BlockTitleSlyle = styled.h3`\n    width: fit-content;\n    height: 43px;\n    color: var(--orange);\n    flex-shrink: 0;\n\n    font-weight: 700;\n    font-size: 36px;\n`;","import React, { memo } from 'react';\n\nimport { BlockTitleSlyle } from './block-title.style';\n\nconst BlockTitle: React.FC<{ title: string }> = memo(({ title }) => {\n\n    return (\n        <BlockTitleSlyle>{title}</BlockTitleSlyle>\n    )\n});\n\nexport default BlockTitle;","import styled from 'styled-components';\n\nexport const TextBoxStyle = styled.article`\n    width: 421px;\n    height: fit-content;\n    color: var(--white);\n    text-align: left;\n\n    font-family: 'Avenir Next Cyr';\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 120%;\n`;","import { FC, memo } from \"react\";\n\n\nimport { TextBoxStyle } from './text-box.style';\n\nconst TextBox: FC<{ text: string }> = memo(({ text }) => {\n\n    return (\n        <TextBoxStyle>{text}</TextBoxStyle>\n    )\n});\n\nexport default TextBox;","import styled from 'styled-components';\n\nexport const InputWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n`;\n\nexport const InputLabel = styled.label`\n    min-height: 25px;\n    font-weight: 700;\n    font-size: 24px;\n`;\n\nexport const InputStyle = styled.input`\n    width: 421px;\n    height: 42px;\n    padding: 12px 18px;\n    outline: none;\n    transition: border .3s;\n\n    color: var(--white);\n    background-color: var(--main-background);\n    \n    border: 1px solid var(--white);\n    border-radius: 30px;\n\n    font-family: 'Avenir Next Cyr';\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 18px;\n\n    &:focus {\n        border: 1px solid var(--orange);\n    }\n`;","import { forwardRef } from 'react';\n\nimport { InputWrapper, InputStyle, InputLabel } from './input.style';\n\ninterface IInput {\n    placeholder: string,\n    label?: string,\n    required: boolean,\n    type: string\n};\n\nconst Input = forwardRef<HTMLInputElement, IInput>(({ placeholder, label, required, type }, ref) => {\n\n    return (\n        <InputWrapper>\n            <InputLabel htmlFor={label}>{label}</InputLabel>\n            <InputStyle\n                ref={ref}\n                type={type}\n                placeholder={placeholder}\n                id={label}\n                name={label}\n                required={required}\n            />\n        </InputWrapper>\n    )\n});\n\nexport default Input;","import styled from 'styled-components';\n\nexport const SignUpForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n`;\n\nexport const ButtonWrapper = styled.div`\n    width: fit-content;\n    margin-top: 15px;\n`;\n\nexport const UserStyle = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n`;","import { useRef } from 'react';\n\nimport { useAppDispatch, useAppSelector } from '../../app-redux/hooks';\nimport { addCurrentNameAndEmail } from '../../app-redux/slices/participant.slice';\n\nimport Button from '../../components/button/button.component';\nimport Input from '../../components/input/input.component';\nimport UserField from '../../components/user-field/user-field.component';\n\nimport { ButtonWrapper, SignUpForm, UserStyle } from './sign-up.style';\n\nconst SignUp = () => {\n    const dispatch = useAppDispatch();\n    const signedUp = useAppSelector((state) => state.participant.regRespImitation);\n    const { email, username } = useAppSelector((state) => state.participant.current);\n\n    const nameRef = useRef() as any;\n    const emailRef = useRef() as any;\n\n\n    const signUpHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event?.preventDefault();\n\n        if (nameRef && emailRef) {\n            // Refs values from the input \n            let usersData = {\n                username: nameRef.current.value,\n                email: emailRef.current.value,\n            }\n            // Send form fields to the Redux store\n            dispatch(addCurrentNameAndEmail(usersData));\n\n            // Clear input values\n            nameRef.current.value = '';\n            emailRef.current.value = '';\n        }\n\n    };\n\n    return (\n        <>\n            {\n                !signedUp ?\n                    <SignUpForm onSubmit={signUpHandler}>\n                        <Input label='NAME' placeholder='We will display your name in participation list' required ref={nameRef} type='text' />\n                        <Input label='EMAIL' placeholder='We will display your email in participation list' required ref={emailRef} type='email' />\n                        <ButtonWrapper>\n                            <Button label='Get early access' type='submit' />\n                        </ButtonWrapper>\n                    </SignUpForm>\n                    :\n                    <UserStyle>\n                        <UserField label='NAME' text={username} />\n                        <UserField label='EMAIL' text={email} />\n                        <ButtonWrapper>\n                            <Button label='List me to the table' inactive />\n                        </ButtonWrapper>\n                    </UserStyle>\n            }\n        </>\n    )\n};\n\nexport default SignUp;","import styled from 'styled-components';\n\nexport const SignUpContainer = styled.div`\n    height: fit-content;\n    min-width: 420px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n`;\n\nexport const TextBoxWrapper = styled.div`\n    margin-bottom: 18px;\n`;","import BlockTitle from '../../components/block-title/block-title.component';\nimport TextBox from '../../components/text-box/text-box.component';\n\nimport SignUp from '../../blocks/sign-up/sign-up.block';\n\nimport { SignUpContainer, TextBoxWrapper } from './registration.style.js';\n\nconst Registration = () => {\n\n    return (\n        <SignUpContainer>\n            <BlockTitle title='Beta test registration' />\n            <TextBoxWrapper>\n                <TextBox text='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ' />\n            </TextBoxWrapper>\n            <SignUp />\n        </SignUpContainer>\n    )\n};\n\nexport default Registration;","import styled from 'styled-components';\n\nexport const ParticipantsWrapper = styled.div`\n    position: relative;\n\n    width: 100%;\n    height: fit-content;\n`;\n\nexport const ParticipantStyle = styled.div`\n    height: 50px;\n    margin-right: 18.25px;\n    color: var(--white);\n    border-bottom: 1px solid var(--white);\n\n    font-family: 'Avenir Next Cyr';\n    font-weight: 400;\n    font-size: 14px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const ParticipantsMainStyle = styled(ParticipantStyle)`\n    color: var(--orange);\n`;\n\n// ---------------------------- //\n\nconst BaseP = styled.span`\n    text-align: start;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nexport const NameP = styled(BaseP)`\n    width: 110px;\n`;\n\nexport const EmailP = styled(BaseP)`\n    width: 173px;\n`;\n\nexport const WalletP = styled(BaseP)`\n    width: 195px;\n    margin-right: 29px;\n`;\n\n// ------------------------------ //\n\nexport const Сross = styled.span`\n    position: absolute;\n    top: 50%;\n    right: 0;\n\n    padding: 10px;\n    color: var(--orange);\n    z-index: 2;\n    transform: translate(-50%, -50%);\n\n    &:hover {\n        cursor: pointer;\n    }\n`;","import { useState, useEffect, memo } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { useAppSelector, useAppDispatch } from '../../app-redux/hooks';\nimport { removeUser } from '../../app-redux/slices/participant.slice';\n\nimport { ParticipantStyle, ParticipantsWrapper, ParticipantsMainStyle, NameP, EmailP, WalletP, Сross } from './participant.style';\n\nexport interface IParticipant {\n    username?: string,\n    email?: string,\n    address?: string,\n};\n\nconst Participant = memo(({ username, email, address }: IParticipant) => {\n    const dispatch = useAppDispatch();\n    const [current, setCurrent] = useState(false);\n    const currentUserAddress = useAppSelector((state) => state.participant.current.address);\n\n    // Re-move user from the list;\n    const onDeleteHandler = () => {\n        dispatch(removeUser());\n        setCurrent(false);\n    }\n\n    // Check if current participant is our user base on address\n    // If true => change CURRENT state;\n    useEffect(() => {\n        if (currentUserAddress === address) setCurrent(true);\n    }, [address, currentUserAddress]);\n\n    return (\n        <>\n            {\n                current ?\n\n                    <ParticipantsWrapper>\n                        <Link to='/profile'>\n                            <ParticipantsMainStyle>\n                                <NameP>{username}</NameP>\n                                <EmailP>{email}</EmailP>\n                                <WalletP>{address}</WalletP>\n                            </ParticipantsMainStyle>\n                        </Link>\n                        <Сross onClick={onDeleteHandler}>&times;</Сross>\n                    </ParticipantsWrapper>\n                    :\n                    <ParticipantStyle>\n                        <NameP>{username}</NameP>\n                        <EmailP>{email}</EmailP>\n                        <WalletP>{address}</WalletP>\n                    </ParticipantStyle>\n            }\n        </>\n    )\n});\n\nexport default Participant;","import styled from 'styled-components';\n\nexport const ParticipantsMain = styled.div`\n    max-height: 550px;\n    overflow-y: scroll;\n\n    &::-webkit-scrollbar {\n        width: 10px;\n        background-color: var(--white);\n    }\n\n    &::-webkit-scrollbar-track {\n        width: 1px;\n        background-color: var(--main-background);\n    }\n\n    &::-webkit-scrollbar-thumb {\n        background-color: var(--orange);\n        border: 3px solid transparent;\n        border-radius: 9px;\n        background-clip: content-box;\n    }\n`;\n\nexport const SpinnerWrapper = styled.div`\n    width: 668px;\n    height: 100%;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;","import { useEffect } from 'react';\n\nimport { useAppSelector, useAppDispatch } from '../../app-redux/hooks';\nimport { nextPageHandler } from '../../app-redux/slices/participant.slice';\n\nimport Participant from '../participant/participant.component';\n\nimport { ParticipantsMain } from './scroll-list.style';\n\nconst ScrollList = () => {\n    const dispatch = useAppDispatch();\n    const uppdatedData = useAppSelector((state) => state.participant.allParticipants);\n    const stop = useAppSelector((state) => state.participant.noPages);\n\n    // when the user scrolls to the bottom of the block at the end we trigger a scroll event and change PAGE;\n    const scrollHandler = (e: any) => {\n        // scrollBarHeight = currentBlockHeight + scrolledNumber;\n        let scrollBarHeight = e.currentTarget.scrollHeight;\n        let currentBlockHeight = e.target.clientHeight;\n        let scrolledNumber = e.currentTarget.scrollTop;\n\n        if (stop) return;\n\n        // Change page on scroll bottom\n        if (scrollBarHeight - (currentBlockHeight + scrolledNumber) < 1) {\n            dispatch(nextPageHandler())\n        }\n    };\n\n    return (\n        <ParticipantsMain onScroll={scrollHandler}>\n            {\n                uppdatedData?.map((item, index) => (\n                    <Participant\n                        key={index}\n                        username={item.username}\n                        email={item.email}\n                        address={item.address}\n                    />\n                ))\n            }\n        </ParticipantsMain>\n    )\n};\n\nexport default ScrollList;","import styled from 'styled-components';\n\nexport const ParticipantsStyle = styled.div`\n    max-height: 663px;\n    flex-shrink: 0;\n    text-align: start;\n`;\n\nexport const Title = styled.h3`\n    min-height: 37px;\n    font-weight: 700;\n    font-size: 36px;\n    color: var(--white);\n`;\n\nexport const ParticipantsHeader = styled.div`\n    width: 668px;\n    padding-bottom: 16px;\n    min-height: 25px;\n    margin-top: 35px;\n    margin-right: 28.25px;\n    border-bottom: 1px solid var(--white);\n\n    font-weight: 700;\n    font-size: 24px;\n\n    display: flex;\n    justify-content: space-between;\n\n    .name {\n        width: 110px;\n        text-align: start;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .email {\n        width: 173px;\n        text-align: start;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n\n    .wallet {\n        width: 195px;\n        text-align: start;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n`;\n\nexport const ParticipantsMain = styled.div`\n    max-height: 550px;\n    /* border-right: 1px solid var(--white); */\n    overflow-y: scroll;\n\n    &::-webkit-scrollbar {\n        width: 10px;\n        background-color: var(--white);\n    }\n\n    &::-webkit-scrollbar-track {\n        width: 1px;\n        background-color: var(--main-background);\n    }\n\n    &::-webkit-scrollbar-thumb {\n        background-color: var(--orange);\n        border: 3px solid transparent;\n        border-radius: 9px;\n        background-clip: content-box;\n    }\n`;\n\nexport const SpinnerWrapper = styled.div`\n    width: 668px;\n    height: 100%;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;","import { useEffect } from 'react';\n\nimport { useGetParticipantsQuery } from '../../app-redux/api/participantsAPI';\n\nimport { useAppSelector, useAppDispatch } from '../../app-redux/hooks';\nimport { addParticipantList } from '../../app-redux/slices/participant.slice';\n\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner.component';\nimport ScrollList from '../../blocks/scroll-list/scroll-list.block';\n\nimport { ParticipantsStyle, Title, ParticipantsHeader, SpinnerWrapper } from './participants.style';\n\nconst Participants = () => {\n    // Redux state - dispatch\n    const dispatch = useAppDispatch();\n\n    // Redux hook fetch 1st(0) page; And always listening if Page is change\n    // If PAGE change ---> Hook re-fetch and take new items;\n    const page = useAppSelector((state) => state.participant.page);\n    const { data, isLoading } = useGetParticipantsQuery(page);\n\n    // // // useEffect listening if data change\n    // // // When it change send this new data to the redux store;\n    useEffect(() => {\n        // On data change it send to the redux store\n        if (data) dispatch(addParticipantList(data));\n    }, [data, dispatch]);\n\n    // =--------------------------------------------------------------------------------//\n\n    // While loading - show spinner;\n    if (isLoading) {\n        return (\n            <SpinnerWrapper>\n                <LoadingSpinner />\n            </SpinnerWrapper>)\n    }\n\n    return (\n        <ParticipantsStyle>\n            <Title>Participation listing (enable only for participants)</Title>\n            <ParticipantsHeader>\n                <span className='name'>NAME</span>\n                <span className='email'>EMAIL</span>\n                <span className='wallet'>WALLET</span>\n            </ParticipantsHeader>\n            <ScrollList />\n        </ParticipantsStyle>\n    )\n};\n\nexport default Participants;","import styled from 'styled-components';\n\nexport const TextCallStyle = styled.div`\n    position: absolute;\n    top: ${({ top }) => top ? `${top}px` : '156px'};\n    left:${({ left }) => left ? `${left}px` : '64px'};\n\n    width: 1008px;\n    height: fit-content;\n    text-align: left;\n    color: ${({ type }) => type !== 'orange' ? 'var(--white)' : 'var(--orange)'};\n    z-index: ${({ type }) => type !== 'orange' ? '18' : '4'};\n\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const TextCallLine = styled.p`\n    width: 100%;\n    height: 120px;\n`;\n\nexport const MarkText = styled.span`\n    color: var(--main-background);\n    text-shadow: 0 0 5px var(--white);\n`;","import { TextCallStyle, TextCallLine, MarkText } from './text-call.style';\n\ninterface ITextCall {\n    type?: string,\n    top?: number,\n    left?: number,\n};\n\nconst TextCall = ({ type, top, left }: ITextCall) => {\n    return (\n        <TextCallStyle type={type} top={top} left={left}>\n            <TextCallLine>EXPLORE YOUR OWN PLANET</TextCallLine>\n            <TextCallLine>IN <MarkText>OUR NEW</MarkText> METAVERSE</TextCallLine>\n        </TextCallStyle>\n    )\n};\n\nexport default TextCall;","import styled from 'styled-components';\n\nexport const MainStyle = styled.section`\n    position: relative;\n\n    width: 100%;\n    min-height: 596px;\n    margin-top: 144px;\n\n    font-weight: 700;\n    font-size: 120px;\n`;\n\nexport const TextWrapper = styled.div`\n    position: absolute;\n    left: 64px;\n    top: 441px;\n`;\n\nexport const StatusBox = styled.div`\n    position: absolute;\n    width: 199px;\n    height: 291px;\n    left: 1177px;\n    top: 173px;\n\n    font-family: 'Bebas Neue';\n    font-weight: 700;\n    letter-spacing: 1px;\n\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const StatsTitle = styled.h4`\n    margin-bottom: 34px;\n    color: var(--white);\n    font-size: 32px;\n`;\n\nexport const Stat = styled.div`\n    width: 100%;\n    padding: 8px 0;\n    border-bottom: ${({ last }) => last ? 'none' : '0.5px solid rgba(210, 196, 196, 1)'};\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Number = styled.p`\n    min-height: 28px;\n    font-size: 28px;\n    line-height: 120%;\n    color: var(--orange);\n`;\n\nexport const Label = styled.p`\n    min-height: 22px;;\n    font-size: 18px;\n    color: var(--white);\n`;","import { memo } from 'react';\n\nimport TextBox from '../../components/text-box/text-box.component';\nimport Planet from '../../blocks/planet/planet.block';\n\nimport TextCall from '../../blocks/text-call/text-call.e';\n\nimport { MainStyle, TextWrapper, StatusBox, StatsTitle, Stat, Number, Label } from './main.style';\n\nconst Main = memo(() => {\n\n    return (\n        <MainStyle>\n            <TextCall />\n            <Planet pointBox top={0} left={621} ellipse={true}>\n                <TextCall type='orange' top={51} left={-663} />\n            </Planet>\n            <TextWrapper>\n                <TextBox text='Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. ' />\n            </TextWrapper>\n            <StatusBox>\n                <StatsTitle>ROADMAP STATS</StatsTitle>\n                {   // Массив статистики \n                    [1, 2, 3].map((num, _, array) => (\n                        <Stat key={num} last={num === array.length}>\n                            <Number>12,345</Number>\n                            <Label>Lorem ipsum dolor</Label>\n                        </Stat>))\n                }\n            </StatusBox>\n        </MainStyle>\n    )\n});\n\nexport default Main;","import styled from 'styled-components';\n\nexport const BlackBoxWrapper = styled.div`\n    display: ${({ open }) => open ? 'initial' : 'none'};\n\n    min-height: 100vh;\n    min-width: 100vw;\n    background-color: rgba(23, 23, 23, 0.81);\n    z-index: 200;\n    \n    position: absolute;\n    top: 0;\n    left: 0;\n`;\n\nexport const ExtentinWindowStyle = styled.div`\n    width: 422px;\n    height: 295px;\n    padding: 48px 0;\n    background: var(--secondary-background);\n\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const ExtentionDescription = styled.p`\n    max-width: 320px;\n    color: var(--white);\n    text-align: center;\n    \n    font-family: 'Inter';\n    font-weight: 400;\n    font-size: 19px;\n    line-height: 120%;\n\n    & .marked {\n        color: var(--orange);\n    }\n`;","// Redux\nimport { useAppSelector, useAppDispatch } from '../../app-redux/hooks';\nimport { extentionChangeHandler } from '../../app-redux/slices/extention.slice';\n\nimport BlockTitle from '../../components/block-title/block-title.component';\nimport Button from '../../components/button/button.component';\n\nimport { ExtentinWindowStyle, ExtentionDescription, BlackBoxWrapper } from './extention-window.style';\n\nconst ExtentionWindow = () => {\n    const dispatch = useAppDispatch();\n    const open = useAppSelector((state) => state.extention.extentionReady);\n\n    const skipHandler = () => dispatch(extentionChangeHandler(false));\n\n    return (\n        <BlackBoxWrapper open={open}>\n            <ExtentinWindowStyle>\n                <BlockTitle title='METAMASK EXTENTION' />\n                <ExtentionDescription>\n                    To work with our application, you have to install the\n                    <a className='marked' href='https://metamask.io/'\n                        target='_blank' rel=\"noopener noreferrer\"\n                    > Metamask browser extention\n                    </a>\n                </ExtentionDescription>\n                <Button label='SKIP THIS STEP' onClickHandler={skipHandler} />\n            </ExtentinWindowStyle>\n        </BlackBoxWrapper>\n    )\n};\n\nexport default ExtentionWindow;","import { useAppSelector } from \"../../app-redux/hooks\";\n\nimport { HomePageStyle, FooterStyle } from \"./home.style\";\n\nimport Registration from \"../../sections/registration/registration.section\";\nimport Participants from \"../../sections/participants/participants.section\";\nimport Main from \"../../sections/main/main.section\";\nimport ExtentionWindow from \"../../sections/extention-window/extention-window.section\";\n\nconst HomePage = () => {\n    const signedUp = useAppSelector((state) => state.participant.regRespImitation);\n\n    return (\n        <HomePageStyle>\n            <ExtentionWindow />\n            <Main />\n            <FooterStyle>\n                <Registration />\n                {signedUp && <Participants />}\n            </FooterStyle>\n        </HomePageStyle>\n    )\n};\n\nexport default HomePage;"],"names":["EllipseAnimationWrapper","styled","_templateObject","_taggedTemplateLiteral","Dot","_templateObject2","DotBox","_templateObject3","_ref","size","strokeWidth","percentage","color","pointBox","animation","_useState","useState","_useState2","_slicedToArray","oneDot","setOneDot","_useState3","_useState4","twoDot","setTwoDot","_useState5","_useState6","threeDot","setThreeDot","_useState7","_useState8","progress","setProgress","viewBox","concat","radius","circumference","Math","PI","dash","noAnimation","extentionIsOpen","useAppSelector","state","extention","extentionReady","useEffect","setTimeout","_jsxs","children","_jsx","width","height","fill","stroke","cx","cy","r","transform","strokeDasharray","strokeLinecap","style","transition","top","left","right","bottom","PlanetStyle","_ref2","_ref3","_ref4","PlanetAttractionWrapper","PlanetImage","planetImage","EllipseOneMain","_templateObject4","EllipseTwo","_templateObject5","EllipseThree","_templateObject6","ellipse","planetRef","useRef","ref","onPointerLeave","planet","current","forEach","child","onPointerEnter","onMouseMove","event","_planet$getBoundingCl","_planet$getBoundingCl2","planetX","getBoundingClientRect","clientWidth","planetY","clientHeight","cursoreX","clientX","cursoreY","clientY","transX","transY","EllipseProgress","UserFieldStyle","FieldLabel","FieldText","label","text","HomePageStyle","FooterStyle","BlockTitleSlyle","memo","title","TextBoxStyle","InputWrapper","InputLabel","InputStyle","forwardRef","placeholder","required","type","htmlFor","id","name","SignUpForm","ButtonWrapper","UserStyle","dispatch","useAppDispatch","signedUp","participant","regRespImitation","_useAppSelector","email","username","nameRef","emailRef","_Fragment","UserField","Button","inactive","onSubmit","preventDefault","usersData","value","addCurrentNameAndEmail","Input","SignUpContainer","TextBoxWrapper","BlockTitle","TextBox","SignUp","ParticipantsWrapper","ParticipantStyle","ParticipantsMainStyle","BaseP","NameP","EmailP","WalletP","_templateObject7","Сross","_templateObject8","address","setCurrent","currentUserAddress","Link","to","onClick","removeUser","ParticipantsMain","uppdatedData","allParticipants","stop","noPages","onScroll","e","scrollBarHeight","currentTarget","scrollHeight","currentBlockHeight","target","scrolledNumber","scrollTop","nextPageHandler","map","item","index","Participant","ParticipantsStyle","Title","ParticipantsHeader","SpinnerWrapper","page","_useGetParticipantsQu","useGetParticipantsQuery","data","isLoading","addParticipantList","LoadingSpinner","className","ScrollList","TextCallStyle","TextCallLine","MarkText","MainStyle","TextWrapper","StatusBox","StatsTitle","Stat","last","Number","Label","TextCall","Planet","num","_","array","length","BlackBoxWrapper","open","ExtentinWindowStyle","ExtentionDescription","href","rel","onClickHandler","extentionChangeHandler","ExtentionWindow","Main","Registration","Participants"],"sourceRoot":""}